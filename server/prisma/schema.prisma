// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String           @id @default(uuid())
  name             String
  email            String?          @unique
  role             Role             @default(AUTHER)
  profile_pic      Profile_pic?
  date_of_birth    DateTime?
  password         String           @unique
  writterPost      Post[]           @relation("WrittenPost")
  favoritePost     Post[]
  userPreferences  UserPreferences? @relation(fields: [userPreferenceId], references: [id])
  userPreferenceId String?          @unique

  @@unique([name, email])
  @@index([email])
}

model Profile_pic {
  id                String  @id @default(uuid())
  width             Int     @default(700)
  height            Int     @default(700)
  asset_id          String
  created_at        String
  bytes             Int
  secure_url        String
  original_filename String
  user              User?   @relation(fields: [user_id], references: [id])
  user_id           String? @unique
}

model UserPreferences {
  id           String  @id @default(uuid())
  emailUpdates Boolean @default(false)
  user         User?
}

model Post {
  id         String     @id @default(uuid())
  title      String
  content    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  bg_image   Bg_Image?
  auther     User       @relation("WrittenPost", fields: [autherId], references: [id])
  autherId   String
  favoriteBy User[]
  categories Categoty[]
  tags       String[] // need to figure out that how we will store unique items in scalar list
}

model Bg_Image {
  id                String @id @default(uuid())
  width             Int    @default(700)
  height            Int    @default(700)
  asset_id          String
  created_at        String
  bytes             Int
  secure_url        String
  original_filename String
  post              Post   @relation(fields: [post_id], references: [id])
  post_id           String @unique
}

model Categoty {
  id    String       @id @default(uuid())
  name  categoryRole @unique @default(General)
  posts Post[]
}

enum categoryRole {
  Programming
  General
  Memes
}

enum Role {
  AUTHER
  ADMIN
}
