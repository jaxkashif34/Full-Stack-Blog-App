// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  name          String
  email         String       @unique
  role          Role         @default(AUTHER)
  profile_pic   Profile_pic?
  date_of_birth DateTime
  password      String       @unique
  writterPost   Post[]       @relation("WrittenPost")
  favoritePost  Post[]
  emailUpdates  Boolean?     @default(false)
}

model Profile_pic {
  id                String @id @default(uuid())
  width             Int    @default(700)
  height            Int    @default(700)
  asset_id          String
  created_at        String
  bytes             Int
  secure_url        String
  original_filename String
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String @unique
}

model Post {
  id         String     @id @default(uuid())
  title      String
  content    String
  tags       String[] // need to figure out that how we will store unique items in scalar list
  autherId   String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  bg_image   Bg_Image?
  auther     User       @relation("WrittenPost", fields: [autherId], references: [id], onDelete: Cascade)
  favoriteBy User[]
}

model Bg_Image {
  id                String @id @default(uuid())
  width             Int    @default(700)
  height            Int    @default(700)
  asset_id          String
  created_at        String
  bytes             Int
  secure_url        String
  original_filename String
  post              Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId            String @unique
}


enum Role {
  AUTHER
  ADMIN
}
